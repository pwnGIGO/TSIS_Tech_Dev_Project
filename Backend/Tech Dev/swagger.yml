openapi: 3.0.1
# Esta sección contiene información sobre el API
info:
  title: API Turismo UAM
  version: '1.0_20220408'
  description: Especificación de API con Open API para el proyecto de Temas Selectos de Ingeniería de Software.
  contact:
    email: pwngigo@gmail.com
    name: Tech Dev
    
# Esta sección contiene información sobre los lugares
paths:
  
######################
# Lugares Turisticos #
######################
  /v1/lugares:
#getLugares
    get:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Lugares Turísticos
      summary: Recupera la lista completa de lugares turísticos
      description: 'Regresa un objecto que contiene todos los lugares turísticos'
      # El operationId generalmente corresponde al nombre del método en el controller
      operationId: 'getPlaces'
      responses:
        '200':
          description: Consulta exitosa
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#postLugar
    post:
      tags:
      - Lugares Turísticos
      summary: Permite dar de alta un lugar turístico
      description: 'Permite dar de alta un lugar, se valida que dicho producto no haya sido dado de alta previamente con el mismo nombre'
      operationId: 'setPlace'
      # En este ejemplo, como es un POST, lleva un RequestBody
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/lugarDto"
      responses:
        '201':
          description: Creación exitosa
          # La creación exitosa debe regresar un header Location y como cuerpo del mensaje el DTO
          headers:
            Location:
              description: Url del lugar recien creado ej. /v1/lugares/1234
              schema:
                type: string
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/lugarDto"
        '400':
          description: No se pudo crear el lugar exitosamente
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/errorDto"
        '500':
          description: Error interno durante la consulta
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/errorDto"
#getLugar
  /v1/lugares/{lugarId}:
    parameters: 
      - "$ref": "#/components/parameters/lugarId"
    get:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Lugares Turísticos
      summary: Recupera la información de un lugar turístico
      description: 'Regresa un objecto que contiene un lugar turístico'
      # El operationId generalmente corresponde al nombre del método en el controller
      operationId: 'getPlace'
      responses:
        '200':
          description: Consulta exitosa
          # La estructura del dto está dada por un schema (ver sección components/schemas al final del archivo)
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#updateLugar
    put:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Lugares Turísticos
      summary: Actualiza un lugar turístico
      description: 'Regresa el objecto actualizado'
      operationId: 'updatePlace'
      requestBody:
        content:
          application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
      responses:
        '200':
          description: Lugar actualizado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#patchLugar
    patch:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Lugares Turísticos
      summary: Modifica un lugar turístico
      description: 'Regresa el objecto modificado'
      operationId: 'patchPlace'
      requestBody:
        content:
          application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
      responses:
        '200':
          description: Lugar modificado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#deleteLugar
    delete:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Lugares Turísticos
      summary: Elimina un lugar turístico
      description: 'Regresa un objecto que contiene el lugar turístico eliminado'
      operationId: 'deletePlace'
      responses:
        '200':
          description: Lugar eliminado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
  
  # getComentarios
  /v1/lugares/{lugarId}/comentarios:
      parameters: 
          - "$ref": "#/components/parameters/lugarId"
      get:
        tags:
        - Lugares Turísticos 
        summary: Recupera todos los comentarios de un lugar en especifico
        description: 'Regresa un objecto que contiene todos los comentarios de un lugar en especifico'
        operationId: 'getComentarios'
        responses:
          '200':
            description: Consulta exitosa
            content:
              application/json:
                examples:
                  default:
                    value: |-
                      {
                          "comentarios":[
                            {
                            "usuario":"Rodrigo",
                            "fecha": "20/10/2022",
                            "descripcion":"blablabla bla"
                            },
                            {
                            "usuario":"Daniel",
                            "fecha": "20/10/2022",
                            "descripcion":"blablabla bla"
                            }
                            ]
                      }
          '500':
              description: Error interno durante la consulta
              content:
                application/json:
                  schema:
                    "$ref": "#/components/schemas/errorDto"
  
  # postComentarios
      post:
        tags:
        - Lugares Turísticos
        summary: Permite dar de alta un comentario en un lugar en especifico
        description: 'Permite dar de alta un comentario'
        operationId: 'setComentarios'
        requestBody:
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/comentarioDTO"
        responses:
          '201':
            description: Creación exitosa
            headers:
              Location:
                description: Url del comentario creado
                schema:
                  type: string
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/comentarioDTO"
          '400':
            description: No se pudo crear el comentario
            content:
              application/json:
                schema:
                    "$ref": "#/components/schemas/errorDto"
          '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                    "$ref": "#/components/schemas/errorDto"  
                    
  # getPrecios
  /v1/lugares/precios:
      get:
        tags:
        - Lugares Turísticos 
        summary: Recupera todos los lugares con su precio general y su ID
        description: 'Regresa un objecto que contiene todos los lugares con su precio general y su ID'
        responses:
          '200':
            description: Consulta exitosa
            content:
              application/json:
                examples:
                  default:
                    value: |-
                      {
                       "precios":[
                          {
                            "id":"2134457654324",
                            "nombre": "Teotihuacan",
                            "precios":["General $300 mxn", "...","..."]
                          },
                          {
                            "id":"9376537851201",
                            "nombre": "Chichén",
                            "precios":["General $300 mxn", "...","..."]
                          }
                        ]
                      }
          '500':
              description: Error interno durante la consulta
              content:
                application/json:
                  schema:
                    "$ref": "#/components/schemas/errorDto"
                    
  # getTipo
  /v1/lugares/id/tipo:
      get:
        tags:
        - Lugares Turísticos 
        summary: Recupera todos los lugares con su tipo de zona y su ID
        description: 'Regresa un objecto que contiene todos los lugares con su tipo de zona y su ID'
        responses:
          '200':
            description: Consulta exitosa
            content:
              application/json:
                examples:
                  default:
                    value: |-
                      {
                       "tipos":[
                          {
                            "id":"2134457654324",
                            "tipo":"Zona arqueológica"
                          },
                          {
                            "id":"9376537851201",
                            "tipo":"Museo"
                          }
                        ]
                      }
          '500':
              description: Error interno durante la consulta
              content:
                application/json:
                  schema:
                    "$ref": "#/components/schemas/errorDto"
  
#################
# Vuelos Aereos #
#################
  /v1/vuelo:
#getVuelos
    get:
      tags:
      - Vuelos Aéreos
      summary: Recupera la lista completa de vuelos
      description: 'Regresa un objecto que contiene todos los vuelos'
      operationId: 'getFlies'
      responses:
        '200':
          description: Consulta exitosa
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/vueloDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#postVuelo
    post:
      tags:
      - Vuelos Aéreos
      summary: Permite dar de alta un vuelo
      description: 'Permite dar de alta un vuelo, se valida que dicho vuelo no haya sido dado de alta previamente'
      operationId: 'setFly'
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/vueloDto"
      responses:
        '201':
          description: Creación exitosa
          headers:
            Location:
              description: Url del vuelo recien creado ej. /v1/vuelos/1234
              schema:
                type: string
                
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/vueloDto"
        '400':
          description: No se pudo crear el vuelo exitosamente
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/errorDto"
        '500':
          description: Error interno durante la consulta
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/errorDto"
#getVuelo
  /v1/vuelo/{vueloId}:
    parameters: 
      - "$ref": "#/components/parameters/vueloId"
    get:
      tags:
      - Vuelos Aéreos
      summary: Recupera la información de un vuelo
      description: 'Regresa un objecto que contiene un vuelo'
      operationId: 'getFly'
      responses:
        '200':
          description: Consulta exitosa
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/vueloDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#updateVuelo
    put:
      tags:
      - Vuelos Aéreos
      summary: Actualiza un vuelo turístico
      description: 'Regresa el objecto actualizado'
      operationId: 'updateFly'
      requestBody:
        content:
          application/json:
              schema: 
                "$ref": "#/components/schemas/vueloDto"
      responses:
        '200':
          description: Vuelo actualizado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/vueloDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#patchLugar
    patch:
      tags:
      - Vuelos Aéreos
      summary: Modifica un vuelo
      description: 'Regresa el objecto modificado'
      operationId: 'patchFly'
      requestBody:
        content:
          application/json:
              schema: 
                "$ref": "#/components/schemas/vueloDto"
      responses:
        '200':
          description: Vuelo modificado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/vueloDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#deleteFly
    delete:
      tags:
      - Vuelos Aéreos
      summary: Elimina un lugar vuelo
      description: 'Regresa un objecto que contiene el vuelo eliminado'
      operationId: 'deleteFly'
      responses:
        '200':
          description: Lugar eliminado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/vueloDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"

###########
# Hoteles #
###########
  /v1/hotel:
#getHoteles
    get:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Hoteles
      summary: Recupera la lista completa de lugares turísticos
      description: 'Regresa un objecto que contiene todos los lugares turísticos'
      # El operationId generalmente corresponde al nombre del método en el controller
      operationId: 'getHotels'
      responses:
        '200':
          description: Consulta exitosa
          # La estructura del dto está dada por un schema (ver sección components/schemas al final del archivo)
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#postLugar
    post:
      tags:
      - Hoteles
      summary: Permite dar de alta un lugar turístico
      description: 'Permite dar de alta un producto, se valida que dicho producto no haya sido dado de alta previamente con el mismo nombre'
      operationId: 'getHotel'
      # En este ejemplo, como es un POST, lleva un RequestBody
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/lugarDto"
      responses:
        '201':
          description: Creación exitosa
          # La creación exitosa debe regresar un header Location
          # y como cuerpo del mensaje el DTO
          headers:
            Location:
              description: Url del producto recien creado ej. /v1/productos/1234
              schema:
                type: string
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/lugarDto"
        '400':
          description: No se pudo crear el producto exitosamente
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/errorDto"
        '500':
          description: Error interno durante la consulta
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/errorDto"
#getLugar
  /v1/hotel/{lugarId}:
    parameters: 
      - "$ref": "#/components/parameters/lugarId"
    get:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Hoteles
      summary: Recupera la información de un lugar turístico
      description: 'Regresa un objecto que contiene un lugar turístico'
      # El operationId generalmente corresponde al nombre del método en el controller
      #operationId: 'getProductTypes'
      responses:
        '200':
          description: Consulta exitosa
          # La estructura del dto está dada por un schema (ver sección components/schemas al final del archivo)
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#updateLugar
    put:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Hoteles
      summary: Actualiza un lugar turístico
      description: 'Regresa el objecto actualizado'
      operationId: 'updateHotel'
      requestBody:
        content:
          application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
      responses:
        '200':
          description: Lugar actualizado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#patchLugar
    patch:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Hoteles
      summary: Modifica un lugar turístico
      description: 'Regresa el objecto modificado'
      operationId: 'patchHotel'
      requestBody:
        content:
          application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
      responses:
        '200':
          description: Lugar modificado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#deleteLugar
    delete:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Hoteles
      summary: Elimina un lugar turístico
      description: 'Regresa un objecto que contiene el lugar turístico eliminado'
      operationId: 'deleteHotel'
      responses:
        '200':
          description: Lugar eliminado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"

################
# Restaurantes #
################
  /v1/restaurant:
#getRestaurantes
    get:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Restaurantes
      summary: Recupera la lista completa de lugares turísticos
      description: 'Regresa un objecto que contiene todos los lugares turísticos'
      # El operationId generalmente corresponde al nombre del método en el controller
      operationId: 'getRestaurants'
      responses:
        '200':
          description: Consulta exitosa
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#postLugar
    post:
      tags:
      - Restaurantes
      summary: Permite dar de alta un lugar turístico
      description: 'Permite dar de alta un producto, se valida que dicho producto no haya sido dado de alta previamente con el mismo nombre'
      operationId: 'getRestaurant'
      # En este ejemplo, como es un POST, lleva un RequestBody
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/lugarDto"
      responses:
        '201':
          description: Creación exitosa
          # La creación exitosa debe regresar un header Location
          # y como cuerpo del mensaje el DTO
          headers:
            Location:
              description: Url del producto recien creado ej. /v1/productos/1234
              schema:
                type: string
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/lugarDto"
        '400':
          description: No se pudo crear el producto exitosamente
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/errorDto"
        '500':
          description: Error interno durante la consulta
          content:
            application/json:
              schema:
                  "$ref": "#/components/schemas/errorDto"
#getLugar
  /v1/resuaturant/{lugarId}:
    parameters: 
      - "$ref": "#/components/parameters/lugarId"
    get:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Restaurantes
      summary: Recupera la información de un lugar turístico
      description: 'Regresa un objecto que contiene un lugar turístico'
      # El operationId generalmente corresponde al nombre del método en el controller
      #operationId: 'getProductTypes'
      responses:
        '200':
          description: Consulta exitosa
          # La estructura del dto está dada por un schema (ver sección components/schemas al final del archivo)
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#updateLugar
    put:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Restaurantes
      summary: Actualiza un lugar turístico
      description: 'Regresa el objecto actualizado'
      operationId: 'updateRestaurant'
      requestBody:
        content:
          application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
      responses:
        '200':
          description: Lugar actualizado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#patchLugar
    patch:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Restaurantes
      summary: Modifica un lugar turístico
      description: 'Regresa el objecto modificado'
      operationId: 'patchRestaurant'
      requestBody:
        content:
          application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
      responses:
        '200':
          description: Lugar modificado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"
#deleteLugar
    delete:
      tags: # Los tags permiten agrupar las rutas en el swagger
      - Restaurantes
      summary: Elimina un lugar turístico
      description: 'Regresa un objecto que contiene el lugar turístico eliminado'
      operationId: 'deleteRestaurant'
      responses:
        '200':
          description: Lugar eliminado
          content:
            application/json:
              schema: 
                "$ref": "#/components/schemas/lugarDto"
        '500':
            description: Error interno durante la consulta
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/errorDto"

                              ########################
                              # Data Transfer Object #
                              ########################

##############
# PARAMETROS #
##############
components:
  parameters: # PARAMETROS
    lugarId: # Lugar ID
      name: lugarId
      in: path
      description: Identificador del lugar generado durante la invocación a POST
      required: true
      schema:
        type: string
        example: 1234
    
    vueloId: # Vuelo ID
      name: vueloId
      in: path
      description: Identificador del vuelo generado durante la invocación a POST
      required: true
      schema:
        type: string
        example: 1234
    
    hotelId: # Hotel ID
      name: hotelId
      in: path
      description: Identificador del hotel generado durante la invocación a POST
      required: true
      schema:
        type: string
        example: 1234
    
    restaurantId: # Restaurant ID
      name: restaurantId
      in: path
      description: Identificador del restaurant generado durante la invocación a POST
      required: true
      schema:
        type: string
        example: 1234
  
  
############
# ESQUEMAS #
############  
  schemas: 
#lugarDto
    lugarDto:
      type: object
      properties:
        nombre:
          type: string
        municipio:
          type: string
        estado:
          type: string
        descripcion:
          type: string
        tipo:
          type: string
        comentarios:
          type: array
          items:
            type: object
            properties:
              usuario:
                type: string
              fecha:
                type: string
              descripcion:
                type: string
                
        geolocalizacion:
          type: object
          properties:
            latitud:
              type: string
            longitud:
              type: string
        horarios:
          type: array
          items:
            type: string
        precios:
          type: array
          items:
            type: string
        
      example: |-
                  {
                    "id": "2134457654324",
                    "nombre": "Chichén Itzá",
                    "municipio":"Tinum",
                    "estado": "Yucatán",
                    "descripcion":"La ciudad es...",
                    "tipo":"Zona arqueológica",
                    "geolocalizacion":{
                      "latitud": "20.683032102156055",
                      "longitud": "-88.5685510258526"
                    },
                    "horarios": [
                      "Lunes a Viernes de 12:00 a 16:00",
                      "Sábado y Domingo de 09:00 a 18:00"
                    ],
                    "precios":[
                      "General $300 mxn",
                      "Estudiante $100 mxn",
                      "Adulto mayor $50 mxn"
                    ]
                  }
#vueloDto
    vueloDto:
      type: object
      properties:
        aerolinea:
          type: string
        origen:
          type: string
        destino:
          type: string
        fechaSalida:
          type: string
        horaSalida:
          type: string
        fechaLlegada:
          type: string
        horaLlegada:
          type: string
        asiento:
          type: string
        precio:
          type: number
        tipoEquipaje:
          type: string
          
      example: |-
                  {
                    "id": "2134457654324",
                    "auerolinea": "Volaris",
                    "origen":"Aeropuerto Internacional de la Ciudad de México",
                    "destino": "Aeropuerto Internacional de Cancún",
                    "fechaSalida": "01-05-2022",
                    "horaSalida":"22:00",
                    "fechaLlegada": "01-05-2022",
                    "horaLlegada":"22:00",
                    "asiento": "A-01",
                    "precio": 2000.00,
                    "tipoEquipaje": "Básico"
                  }
#Fin de vueloDto

# Inicio de hospedajeDto
    hospedajeDto:
      type: object
      properties:
        nombre:
          type: string
        municipio:
          type: string
        estado:
          type: string
        descripcion:
          type: string
        geolocalizacion:
          type: object
          properties:
            latitud:
              type: string
            longitud:
              type: string
        horarios:
          type: array
          items:
            type: string
        precios:
          type: array
          items:
            type: string
      example: |-
                  {
                    "nombre": "Hotel Finisterre",
                    "direccion":"Calz. de Tlalpan 2043, Parque San Andrés, Coyoacán, 04040 Ciudad de México, CDMX",
                    "contacto": {
                      "telefonos": ["+525556899544"],
                      "sitioWeb": "http://www.hotelfinisterre.com.mx/"
                    },
                    
                    "descripcion":"Bulliciosa zona de moda con arquitectura colonial, el Jardín Centenario y el Museo Frida Kahlo.",
                    
                    "geolocalizacion":{
                      "latitud": "19.34512356266588",
                      "longitud": "-99.14457352718428"
                    },
                    "precios":{
                      "sencilla": 3000.00,
                      "doble": 3500.00
                    },
                    
                    "tipo": "Hotel",
                    
                    "servicios": {
                      "estacionamiento": "Si",
                      "piscina": "No",
                      "habitacion": "Si",
                      "lavanderia": "Si",
                      "wifi": "Si",
                      "mascotas": "No"
                    }
                  }
#Fin de hospedajeDto

# Inicio de lugarDto
    restaurantDto:
      type: object
      properties:
        lugares:
          type: array
          items:
            type: string
      example: |-
                  {
                    "nombre": "Chichén Itzá",
                    "municipio":"Tinum",
                    "estado": "Yucatán",
                    "descripcion":"La ciudad es...",
                    "geolocalizacion":{
                      "latitud": "20.683032102156055",
                      "longitud": "-88.5685510258526"
                    },
                    "horarios": [
                      "Lunes a Viernes de 12:00 a 16:00",
                      "Sábado y Domingo de 09:00 a 18:00"
                    ],
                    "precios":[
                      "General $300 mxn",
                      "Estudiante $100 mxn",
                      "Adulto mayor $50 mxn"
                    ]
                  }
#Fin de lugarDto

#Inicio de errorDto
    errorDto:
      required:
      - mensaje
      - status
      type: object
      properties:
        timestamp:
          type: string
          description: Estampa de tiempo del error
          example: '2017-01-13T17:09:42.411'
        status:
          maximum: 599
          minimum: 100
          type: integer
          description: Código HTTP del error 
          format: int32
          example: 500
        error:
          type: string
          description: Mensaje enviado por el backend
          example: RuntimeException
        mensaje:
          type: string
          description: Mensaje del error
          example: Se produjo un error al acceder a la BD
      description: Respuesta en caso de error
#Fin deerrorDto

# comentarioDTO
    comentarioDTO:
      type: object
      properties:
        usuario:
          type: string
        fecha:
            type: string
        descripcion:
          type: string
      example: |-
                  {
                    "usuario": "Rodrigo",
                    "fecha": "20/10/2022",
                    "descripcion":"blablabla bla"
                  }
#Fin ComentariosDTO
  